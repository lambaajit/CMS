@model DLCMS.Models.Updates_MainWebsites

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4 ng-init="initialise('@(Model.Page_Title.Replace("'","^"))', '@(Model.Description.Replace("'","^"))', '@(Model.Title.Replace("'","^"))')">Updates MainWebsites</h4>
    <hr />
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Title, new { @class = "col-md-10 form-control", ng_model = "NameWP" })
            @Html.ValidationMessageFor(model => model.Title)
            <br /><p>Maximum Allowed: 170, Word Count: {{NameWP.length}}</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Brief, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Brief, new { @class = "col-md-10 form-control", @cols = "40", @rows = "3" })
            @Html.ValidationMessageFor(model => model.Brief)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contents, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Contents, new { @class = "col-md-10 form-control", @cols = "40", @rows = "24" })
            @Html.ValidationMessageFor(model => model.Contents)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Page_Title, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Page_Title, new { @class = "col-md-10 form-control", ng_model = "TitleWP" })
            @Html.ValidationMessageFor(model => model.Page_Title)
            <br /><p>Maximum Allowed: 60, Word Count: {{TitleWP.length}}</p>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Description, new { @class = "col-md-10 form-control", ng_model = "DescriptionWP" })
            @Html.ValidationMessageFor(model => model.Description)
            <br /><p>Maximum Allowed: 160, Current Word Count: {{DescriptionWP.length}}</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Keywords, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Keywords, new { @class = "col-md-10 form-control" })
            @Html.ValidationMessageFor(model => model.Keywords)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Image)
            @Html.ValidationMessageFor(model => model.Image)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff1, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff1, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff1)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff2, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff2, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff2)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff3, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff3, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff3)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff4, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff4, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff4)
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Staff5, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff5, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff5)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff6, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff6, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff6)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff7, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff7, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff7)
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Staff8, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff8, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff8)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Staff9, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff9, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff9)
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Staff10, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Staff10, new { @class = "staff" })
            @Html.ValidationMessageFor(model => model.Staff10)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="submitButton" id="Save" value="Save and Create Preview" class="btn btn-default" />
            @if (File.Exists(ViewBag.filepath))
            {
            @*@:<a href="http://10.0.5.214/DuncanLewis_NewWebsite_Revised/Preview/News_Preview.html" style="padding-left:50px; padding-top:10px;" target="_blank">Preview Article</a>*@
            @:<a href="http://cms.duncanlewis.co.uk:8080/Preview/News_Preview.html" style="padding-left:50px; padding-top:10px;" target="_blank">Preview Article</a>
            
        }

        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    <script type="text/javascript">
        var baseUrl = '@Url.Content("~/")'
        var url = baseUrl + 'Api/AllAPIs';
        //var app = angular.module('myApp', []);
        //app.controller('Jobs', function ($scope, $http) {
        //    $scope.StaffName = "";
        //    $scope.getReference = function (referenceNumber) {
        //        $http({
        //            method: 'GET',
        //            url: url,
        //            params: { ID: referenceNumber }
        //        }).then(function (response) {
        //            $scope.myData = response.data;
        //        });
        //    }
        //});

        //$("#Title").blur(function () {
        //    $("#Page_Title").val($("#Title").val());
        //    $("#Description").val($("#Title").val());
        //    $("#Keywords").val($("#Title").val());
        //});

        var url1 = baseUrl + 'Api/StaffList';
        $(".staff").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: url1,
                    data: { ID: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item,
                                value: item
                            }
                        }));
                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        console.log('some error occured', textStatus, errorThrown);
                    }
                });
            },
            select: function (event, ui) {
                $(this).val(ui.item.label);
                return false;
            },
            minLength: 2
        });

    </script>
}


